[{"/Users/natashawong/Desktop/placement-test/src/App.js":"1","/Users/natashawong/Desktop/placement-test/src/Components/QuestionBlock/QuestionBlock.js":"2","/Users/natashawong/Desktop/placement-test/src/Pages/GeneratePage.js":"3","/Users/natashawong/Desktop/placement-test/src/Pages/StudentData.js":"4","/Users/natashawong/Desktop/placement-test/src/index.js":"5","/Users/natashawong/Desktop/placement-test/src/Redux/reducer.js":"6","/Users/natashawong/Desktop/placement-test/src/Components/RadioGroup/RadioGroup.js":"7","/Users/natashawong/Desktop/placement-test/src/Components/TextField/TextField.js":"8"},{"size":478,"mtime":1608194420697,"results":"9","hashOfConfig":"10"},{"size":692,"mtime":1608122185736,"results":"11","hashOfConfig":"10"},{"size":2445,"mtime":1608199114683,"results":"12","hashOfConfig":"10"},{"size":4323,"mtime":1608201253372,"results":"13","hashOfConfig":"10"},{"size":651,"mtime":1608193758386,"results":"14","hashOfConfig":"10"},{"size":506,"mtime":1608194335111,"results":"15","hashOfConfig":"10"},{"size":2432,"mtime":1608199299900,"results":"16","hashOfConfig":"10"},{"size":210,"mtime":1608201005632,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j1wfxr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/natashawong/Desktop/placement-test/src/App.js",[],"/Users/natashawong/Desktop/placement-test/src/Components/QuestionBlock/QuestionBlock.js",[],"/Users/natashawong/Desktop/placement-test/src/Pages/GeneratePage.js",["35","36"],"import React, {Component} from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport QuestionBlock from '../Components/QuestionBlock/QuestionBlock'\n\nexport default class GeneratePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            questions: [],\n            questionNumbering: 0,\n            pageNum: 1,\n        };\n    }\n\n    setQuestions(url) {\n        fetch(url)\n        .then(resp => resp.json())\n        .then(data => this.setState({questions: data}))\n    }\n\n    componentDidMount() {\n        // add an extra /traditional or /simplified to get specifically trad or simp API questions + answers\n        this.setQuestions('https://api.mocki.io/v1/3a1b18ab' + \"/\" + this.props.category);\n    }\n\n    render() {\n        const initialValues = {\n            1: \"\",\n            2: \"\",\n            3: \"\",\n            4: \"\",\n            5: \"\",\n            6: \"\",\n            7: \"\",\n            8: \"\",\n            9: \"\",\n            10: \"\",\n        };\n\n        return(\n            <Formik \n                initialValues={initialValues} \n                onSubmit={(values) => {\n                    alert(JSON.stringify(values, null, 4));\n                    // util function to calc: num correct and append to a user data state\n                    // url has to pull advanced or medium accordingly (append to url)\n                    this.setQuestions(\"https://api.mocki.io/v1/b4f55606\" + \"/\" + this.props.category);\n                    this.setState({\n                        pageNum: this.state.pageNum + 1,\n                        questionNumbering: this.state.questionNumbering + 10\n                    })\n                }}\n            >\n                <Form>\n                    {this.state.questions.map((question, i) =>\n                        <QuestionBlock \n                            key={i}\n                            numbering={this.state.questionNumbering + i + 1}\n                            prompt={question.prompt} \n                            options={question.options}\n                            questionNumber={i+1}\n                        /> \n                    )}\n                    <button type=\"submit\">Submit</button>\n                    <h3>Page {this.state.pageNum} of 4</h3>\n                </Form>\n            </Formik>\n        )\n    }\n}\n\nGeneratePage.propTypes = {\n    category: PropTypes.oneOf([\"traditional\", \"simplified\"])\n}","/Users/natashawong/Desktop/placement-test/src/Pages/StudentData.js",["37"],"/Users/natashawong/Desktop/placement-test/src/index.js",[],"/Users/natashawong/Desktop/placement-test/src/Redux/reducer.js",[],"/Users/natashawong/Desktop/placement-test/src/Components/RadioGroup/RadioGroup.js",[],"/Users/natashawong/Desktop/placement-test/src/Components/TextField/TextField.js",[],{"ruleId":"38","severity":1,"message":"39","line":25,"column":62,"nodeType":"40","messageId":"41","endLine":25,"endColumn":63},{"ruleId":"38","severity":1,"message":"39","line":49,"column":74,"nodeType":"40","messageId":"41","endLine":49,"endColumn":75},{"ruleId":"42","severity":1,"message":"43","line":7,"column":60,"nodeType":"44","messageId":"45","endLine":7,"endColumn":79},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'TopicProfRadioGroup' is defined but never used.","Identifier","unusedVar"]